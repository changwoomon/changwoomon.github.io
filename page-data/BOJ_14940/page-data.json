{"componentChunkName":"component---src-templates-post-jsx","path":"/BOJ_14940/","result":{"data":{"site":{"siteMetadata":{"title":"changwoomon's blog"}},"markdownRemark":{"id":"221e799f-fea3-5f53-91be-a37ed27ebc5e","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">###### 14940번: 쉬운 최단거리</span>\n<span class=\"token comment\"># https://www.acmicpc.net/problem/14940</span>\n<span class=\"token comment\"># 메모리/시간: 183080KB / 508ms (PyPy3)</span>\n\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\n\nN<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n_map <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\noutput_map <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> M <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\ndx<span class=\"token punctuation\">,</span> dy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    queue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span>\n    visited <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    visited<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> way <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            xx<span class=\"token punctuation\">,</span> yy <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>way<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>way<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xx <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>xx <span class=\"token operator\">>=</span> N<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>yy <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>yy <span class=\"token operator\">>=</span> M<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">,</span> yy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">if</span> _map<span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yy<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">if</span> _map<span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yy<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                output_map<span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yy<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> output_map<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n                queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>xx<span class=\"token punctuation\">,</span> yy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                visited<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">,</span> yy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> output_map<span class=\"token punctuation\">,</span> visited\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">where_is_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> _map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">not_zero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    c <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> _map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                c<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cant_go</span><span class=\"token punctuation\">(</span>pos_set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> pos <span class=\"token keyword\">in</span> pos_set<span class=\"token punctuation\">:</span>\n        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> pos\n        output_map<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> output_map\n\npos <span class=\"token operator\">=</span> where_is_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nnz <span class=\"token operator\">=</span> not_zero<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\noutput_map<span class=\"token punctuation\">,</span> ck <span class=\"token operator\">=</span> bfs<span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span>\nremain <span class=\"token operator\">=</span> nz <span class=\"token operator\">-</span> ck\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>remain<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    output_map <span class=\"token operator\">=</span> cant_go<span class=\"token punctuation\">(</span>remain<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> output_map<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[백준] 14940_쉬운 최단거리","date":"May 21, 2021","update":"May 21, 2021","tags":["BOJ","Problem-Solving"],"series":null},"fields":{"slug":"/BOJ_14940/","readingTime":{"minutes":1.05}}},"seriesList":{"edges":[{"node":{"id":"fde7e5ff-6acc-5365-8065-a279e6e8b9e1","fields":{"slug":"/BOJ_1260/"},"frontmatter":{"title":"[백준] 1260_DFS와 BFS"}}},{"node":{"id":"45e249ab-a99a-5e97-a825-0381ad1d944f","fields":{"slug":"/BOJ_2606/"},"frontmatter":{"title":"[백준] 2606_바이러스"}}},{"node":{"id":"a85bb343-a7c2-5bf9-b371-d25d65690fad","fields":{"slug":"/BOJ_11725/"},"frontmatter":{"title":"[백준] 11725_트리의 부모 찾기"}}},{"node":{"id":"340dcb1e-b982-59a1-a07c-4e5869b16af4","fields":{"slug":"/BOJ_1325/"},"frontmatter":{"title":"[백준] 1325_효율적인 해킹"}}},{"node":{"id":"24208b4b-0164-5270-ad3f-4472e03cb315","fields":{"slug":"/BOJ_2178/"},"frontmatter":{"title":"[백준] 2178_미로 탐색"}}},{"node":{"id":"6803b3d1-f83a-5208-b20d-9c8ec6e7c666","fields":{"slug":"/BOJ_2667/"},"frontmatter":{"title":"[백준] 2667_단지번호붙이기"}}},{"node":{"id":"6de0a7d1-7922-511c-a3b0-f6f0284154a1","fields":{"slug":"/BOJ_7576/"},"frontmatter":{"title":"[백준] 7576_토마토"}}},{"node":{"id":"e717a303-cdb8-5d5a-8c67-56fa71d0878f","fields":{"slug":"/BOJ_7569/"},"frontmatter":{"title":"[백준] 7569_토마토"}}},{"node":{"id":"4d61a2e3-f4e6-52e5-9be5-976198b983e3","fields":{"slug":"/BOJ_16918/"},"frontmatter":{"title":"[백준] 16918_봄버맨"}}},{"node":{"id":"0185cf74-3fdb-580a-9cd4-76f50912473d","fields":{"slug":"/BOJ_14502/"},"frontmatter":{"title":"[백준] 14502_연구소"}}},{"node":{"id":"3dd0875d-a6b5-552d-a73f-ed53893ea31c","fields":{"slug":"/BOJ_13549/"},"frontmatter":{"title":"[백준] 13549_숨바꼭질 3"}}},{"node":{"id":"c492ebee-edeb-5644-b58b-1c330979775f","fields":{"slug":"/BOJ_2636/"},"frontmatter":{"title":"[백준] 2636_치즈"}}},{"node":{"id":"221e799f-fea3-5f53-91be-a37ed27ebc5e","fields":{"slug":"/BOJ_14940/"},"frontmatter":{"title":"[백준] 14940_쉬운 최단거리"}}},{"node":{"id":"facc74da-5f1c-5e37-b748-37a40a197080","fields":{"slug":"/BOJ_16973/"},"frontmatter":{"title":"[백준] 16973_직사각형 탈출"}}},{"node":{"id":"8173851b-9429-5eed-b79a-22c58d0fa4b1","fields":{"slug":"/BOJ_18513/"},"frontmatter":{"title":"[백준] 18513_샘터"}}},{"node":{"id":"2bd6745e-303c-5c3a-8531-a02486ef169c","fields":{"slug":"/BOJ_2668/"},"frontmatter":{"title":"[백준] 2668_숫자고르기"}}},{"node":{"id":"ad1e04c7-3fbd-54f0-bd2b-f22a0563fea6","fields":{"slug":"/BOJ_13023/"},"frontmatter":{"title":"[백준] 13023_ABCDE"}}},{"node":{"id":"21deab50-e9e3-5b06-9c79-cdb0adf6c43f","fields":{"slug":"/BOJ_16954/"},"frontmatter":{"title":"[백준] 16954_움직이는 미로 탈출"}}},{"node":{"id":"720f0827-983d-5cd4-bdba-336819178ba1","fields":{"slug":"/TabNet/"},"frontmatter":{"title":"TabNet: Attentive Interpretable Tabular Learning"}}}]},"previous":{"fields":{"slug":"/BOJ_2636/"},"frontmatter":{"title":"[백준] 2636_치즈"}},"next":{"fields":{"slug":"/BOJ_16973/"},"frontmatter":{"title":"[백준] 16973_직사각형 탈출"}}},"pageContext":{"id":"221e799f-fea3-5f53-91be-a37ed27ebc5e","series":null,"previousPostId":"c492ebee-edeb-5644-b58b-1c330979775f","nextPostId":"facc74da-5f1c-5e37-b748-37a40a197080"}},"staticQueryHashes":[]}