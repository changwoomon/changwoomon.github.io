{"version":3,"sources":["webpack:///./node_modules/lodash/map.js","webpack:///./src/components/SideTagList/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/TagList/index.jsx","webpack:///./src/components/PostList/index.jsx","webpack:///./src/components/Bio/index.jsx"],"names":["arrayMap","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","RelativeWrapper","styled","div","Wrapper","aside","Title","props","theme","colors","secondaryText","Tag","li","tertiaryText","text","SideTagList","tags","postCount","to","tag","fieldValue","totalCount","BlogIndex","data","posts","allMarkdownRemark","nodes","group","reverse","length","Layout","SEO","title","description","url","siteUrl","VerticalSpace","size","Bio","Divider","PostList","postList","TagListWrapper","TagLink","selected","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","spaceToDash","replace","TagList","tagList","count","map","i","key","JSON","stringify","PostListWrapper","PostWrapper","Date","p","Excerpt","useState","setPostCount","handleMoreLoad","document","documentElement","scrollHeight","scrollTop","clientHeight","setTimeout","useEffect","window","addEventListener","removeEventListener","slice","post","frontmatter","date","excerpt","slug","fields","mt","mb","BioWrapper","profileImageRoot","location","host","Profile","Author","Description","LinksWrapper","icon","Link","link","children","href","target","rel","github","links","kaggle","instagram","facebook","linkedIn","email","etc","id","author"],"mappings":"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","file":"component---src-pages-index-jsx-e714dcd4020a3b6c518a.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","import React from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst RelativeWrapper = styled.div`\n  position: relative;\n`\n\nconst Wrapper = styled.aside`\n  position: absolute;\n  left: 112%;\n  top: 0px;\n  width: 200px;\n  height: 100px;\n  font-size: 16px;\n\n  @media (max-width: 1300px) {\n    display: none;\n  }\n`\n\nconst Title = styled.div`\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst Tag = styled.li`\n  margin-bottom: 16px;\n  color: ${props => props.theme.colors.tertiaryText};\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.colors.text};\n  }\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n\nconst SideTagList = ({ tags, postCount }) => {\n  return (\n    <RelativeWrapper>\n      <Wrapper>\n        <Title>TAG LIST</Title>\n        <ul>\n          <Tag>\n            <Link to=\"/tags\">all ({postCount})</Link>\n          </Tag>\n          {_.map(tags, tag => (\n            <Tag>\n              <Link to={`/tags?q=${tag.fieldValue}`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </Tag>\n          ))}\n        </ul>\n      </Wrapper>\n    </RelativeWrapper>\n  )\n}\n\nexport default SideTagList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport Bio from \"components/Bio\"\nimport PostList from \"components/PostList\"\nimport SideTagList from \"components/SideTagList\"\nimport Divider from \"components/Divider\"\nimport VerticalSpace from \"components/VerticalSpace\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const tags = _.sortBy(data.allMarkdownRemark.group, [\"totalCount\"]).reverse()\n\n  if (posts.length === 0) {\n    return (\n      <p>\n        No blog posts found. Add markdown posts to &quot;content/blog&quot; (or\n        the directory you specified for the &quot;gatsby-source-filesystem&quot;\n        plugin in gatsby-config.js).\n      </p>\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      <VerticalSpace size={48} />\n      <Bio />\n      <Divider />\n      <SideTagList tags={tags} postCount={posts.length} />\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          update(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 16px;\n  word-break: break-all;\n`\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 9.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 50px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`\n\nconst spaceToDash = text => {\n  return text.replace(/\\s+/g, \"-\")\n}\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    )\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? \"/tags\" : `/tags?q=${tag.fieldValue}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  )\n}\n\nexport default TagList\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\nimport TagList from \"components/TagList\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  margin-bottom: 16px;\n  font-size: 14.4px;\n  color: ${props => props.theme.colors.tertiaryText};\n`\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n  word-break: break-all;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10)\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, date, tags } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        return (\n          <>\n            <PostWrapper>\n              <Title size=\"bg\">\n                <Link to={slug}>{title}</Link>\n              </Title>\n              <Date>{date}</Date>\n              <Excerpt>{excerpt}</Excerpt>\n              <TagList tagList={tags} />\n            </PostWrapper>\n\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  FaGithub,\n  FaKaggle,\n  FaFacebook,\n  FaLinkedin,\n  FaInstagram,\n  FaLink,\n  FaEnvelope,\n} from \"react-icons/fa\"\n\nimport { siteUrl, description, author, links } from \"../../../blog-config\"\n\nconst BioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst profileImageRoot =\n  typeof window !== \"undefined\" && window.location.host === \"localhost:8000\"\n    ? \"http://localhost:8000\"\n    : siteUrl\n\nconst Profile = styled.div`\n  flex: 0 0 auto;\n  margin-right: 16px;\n  width: 128px;\n  height: 128px;\n  border-radius: 999px;\n  background-image: url(${profileImageRoot}/profile.png);\n  background-size: cover;\n  background-position: center;\n`\n\nconst Author = styled.div`\n  margin-bottom: 4.8px;\n  font-size: 24px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.text};\n`\n\nconst Description = styled.div`\n  margin-bottom: 11.2px;\n  line-height: 1.5;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst LinksWrapper = styled.div`\n  & a {\n    margin-right: 9.6px;\n  }\n\n  & svg {\n    width: 25.6px;\n    height: 25.6px;\n    cursor: pointer;\n  }\n\n  & svg path {\n    fill: ${props => props.theme.colors.icon};\n    transition: fill 0.3s;\n  }\n\n  & a:hover svg path {\n    fill: ${props => props.theme.colors.text};\n  }\n`\n\nconst Link = ({ link, children }) => {\n  if (!link) return null\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nconst Bio = () => {\n  const { github, kaggle, instagram, facebook, linkedIn, email, etc } = links\n\n  return (\n    <BioWrapper id=\"bio\">\n      <Profile />\n      <div>\n        <Author>@{author}</Author>\n        <Description>{description}</Description>\n        <LinksWrapper>\n          <Link link={github}>\n            <FaGithub />\n          </Link>\n          <Link link={kaggle}>\n            <FaKaggle />\n          </Link>\n          <Link link={instagram}>\n            <FaInstagram />\n          </Link>\n          <Link link={facebook}>\n            <FaFacebook />\n          </Link>\n          <Link link={linkedIn}>\n            <FaLinkedin />\n          </Link>\n          <Link link={email}>\n            <FaEnvelope />\n          </Link>\n          <Link link={etc}>\n            <FaLink />\n          </Link>\n        </LinksWrapper>\n      </div>\n    </BioWrapper>\n  )\n}\n\nexport default Bio\n"],"sourceRoot":""}